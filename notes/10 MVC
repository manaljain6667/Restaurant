The Model View Controller Framework
Design Patterns
• Well-documented solution to a recurring problem
– Also referred to as an architectural pattern
• Software design pattern
– Reusable solution to commonly occurring problems
– Gang of four: E. Gamma et al. Design Patterns:Elements of Reusable Object-Oriented Software,Addison-Wesley, 1994

The Model-View-Controller (MVC)Framework
• Software engineering architecture pattern
– Isolation of domain logic from user interface
– Permits independent development, testing and maintenance (separation of concerns)

MVC Framework
• Model
– manages the behavior and data of the application domain
– responds to requests for information about its state (usually from the view)
– responds to instructions to change state (usually from the controller)
– In event-driven systems, the model notifies observers (usually views) when the information changes so that they can react

• View
– renders the model into a form suitable for interaction, typically a user interface element
– Multiple views can exist for a single model for different purposes
– A viewport typically has a one to one correspondence with a display surface and knows how to render to it

• Controller
– receives user input and initiates a response by making calls on model objects
– A controller accepts input from the user and instructs the model and viewport to perform actions based on that input

Model View View-Model (MVVM)
• Descendent of MVC
• Sometimes called ModelView-Binder
• View model
– Abstraction of the view that exposes public properties and commands
– Declarative data binding
